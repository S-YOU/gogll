// Generated by GoGLL.
package ast

import (
	"logs/token"
)

type Line struct {
	Sap       string
	IP        string
	Name1     string
	Name2     string
	TimeStamp string
	String0   string
	Number1   string
	Number2   string
	String1   string
	String2   string
}

// G0 : Lines ;
func G00(p0 interface{}) ([]*Line, error) {
	return p0.([]*Line), nil
}

// Lines : Line ;
func Lines0(p0 interface{}) ([]*Line, error) {
	lns := []*Line{p0.(*Line)}
	return lns, nil
}

// Lines : Lines Line ;
func Lines1(p0, p1 interface{}) ([]*Line, error) {
	lns := append(
		p0.([]*Line),
		p1.(*Line))
	return lns, nil
}

// Line : sap ip name name timestamp string number1 number1 string string ;
func Line0(p0, p1, p2, p3, p4, p5, p6, p7, p8, p9 interface{}) (*Line, error) {
	ln := &Line{
		Sap:       p0.(*token.Token).LiteralString(),
		IP:        p1.(*token.Token).LiteralString(),
		Name1:     p2.(*token.Token).LiteralString(),
		Name2:     p3.(*token.Token).LiteralString(),
		TimeStamp: p4.(*token.Token).LiteralString(),
		String0:   p5.(*token.Token).LiteralString(),
		Number1:   p6.(*token.Token).LiteralString(),
		Number2:   p7.(*token.Token).LiteralString(),
		String1:   p8.(*token.Token).LiteralString(),
		String2:   p9.(*token.Token).LiteralString(),
	}
	return ln, nil
}
