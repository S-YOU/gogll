package parser

import (
	"path"

	"github.com/goccmack/goutil/ioutil"
)

func genAction(outDir string) {
	if err := ioutil.WriteFile(
		path.Join(outDir, "src", "parser", "action", "mod.rs"),
		[]byte(actionSrc)); err != nil {
		panic(err)
	}
}

const actionSrc = `
//! Module action is generated by GoGLL. Do not edit.

use super::productions_table::PROD_TAB;

#[derive(PartialEq, Eq)]
pub enum Action {
	Accept,
	Shift(i32),
	Reduce(i32),
}

impl fmt::Display for Action {
    fn fmt(&self, f: &mut fmt::Formatter<'_>) -> fmt::Result {
		match self {
			Action::Accept => write!(f, "accept(0)"),
			Action::Reduce(s) => write!(f, "reduce({}) {}", s, PROD_TAB[s].string,
			Action::Shift(s) => write!(f, "shift({})", s),
		}
    }
}
`
