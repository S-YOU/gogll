digraph sppf{
"b, 0, 1" [shape=ellipse]
"a, 1, 2" [shape=ellipse]
"A, 1, 2" [shape=ellipse]
"A, 1, 2" -> "A : a ∙, 1"
"c, 2, 3" [shape=ellipse]
"S, 0, 3" [shape=ellipse]
"S, 0, 3" -> "S : b A c ∙, 2"
"S, 0, 3" -> "S : b a c ∙, 2"
"S : b A ∙c , 0, 2" [shape=box]
"S : b A ∙c , 0, 2" -> "S : b A ∙c , 1"
"S : b a ∙a , 0, 2" [shape=box]
"S : b a ∙a , 0, 2" -> "S : b a ∙a , 1"
"S : b a ∙c , 0, 2" [shape=box]
"S : b a ∙c , 0, 2" -> "S : b a ∙c , 1"
"S : b a ∙a , 1" [shape=ellipse]
"S : b a ∙a , 1" -> "b, 0, 1"
"S : b a ∙a , 1" -> "a, 1, 2"
"S : b a ∙c , 1" [shape=ellipse]
"S : b a ∙c , 1" -> "b, 0, 1"
"S : b a ∙c , 1" -> "a, 1, 2"
"S : b a c ∙, 2" [shape=ellipse]
"S : b a c ∙, 2" -> "S : b a ∙c , 0, 2"
"S : b a c ∙, 2" -> "c, 2, 3"
"A : a ∙, 1" [shape=ellipse]
"A : a ∙, 1" -> "a, 1, 2"
"S : b A ∙c , 1" [shape=ellipse]
"S : b A ∙c , 1" -> "b, 0, 1"
"S : b A ∙c , 1" -> "A, 1, 2"
"S : b A c ∙, 2" [shape=ellipse]
"S : b A c ∙, 2" -> "S : b A ∙c , 0, 2"
"S : b A c ∙, 2" -> "c, 2, 3"
}
