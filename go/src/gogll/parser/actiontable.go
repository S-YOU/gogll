// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			shift(4), /* package */
			nil,      /* string */
			nil,      /* : */
			nil,      /* ; */
			shift(7), /* nt */
			nil,      /* | */
			nil,      /* emptyAlt */
			nil,      /* any */
			nil,      /* anyof */
			nil,      /* letter */
			nil,      /* number */
			nil,      /* upcase */
			nil,      /* lowcase */
			nil,      /* not */
			nil,      /* space */
			nil,      /* charLiteral */
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          /* INVALID */
			accept(true), /* $ */
			nil,          /* package */
			nil,          /* string */
			nil,          /* : */
			nil,          /* ; */
			nil,          /* nt */
			nil,          /* | */
			nil,          /* emptyAlt */
			nil,          /* any */
			nil,          /* anyof */
			nil,          /* letter */
			nil,          /* number */
			nil,          /* upcase */
			nil,          /* lowcase */
			nil,          /* not */
			nil,          /* space */
			nil,          /* charLiteral */
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      /* INVALID */
			nil,      /* $ */
			nil,      /* package */
			nil,      /* string */
			nil,      /* : */
			nil,      /* ; */
			shift(7), /* nt */
			nil,      /* | */
			nil,      /* emptyAlt */
			nil,      /* any */
			nil,      /* anyof */
			nil,      /* letter */
			nil,      /* number */
			nil,      /* upcase */
			nil,      /* lowcase */
			nil,      /* not */
			nil,      /* space */
			nil,      /* charLiteral */
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(2), /* $, reduce: Grammar */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			shift(7),  /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			shift(10), /* string */
			nil,       /* : */
			nil,       /* ; */
			nil,       /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(4), /* $, reduce: Rules */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			reduce(4), /* nt, reduce: Rules */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			shift(11), /* : */
			nil,       /* ; */
			nil,       /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			reduce(7), /* :, reduce: Head */
			nil,       /* ; */
			nil,       /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(1), /* $, reduce: Grammar */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			shift(7),  /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(5), /* $, reduce: Rules */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			reduce(5), /* nt, reduce: Rules */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			reduce(3), /* nt, reduce: Package */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			shift(12), /* string */
			nil,       /* : */
			nil,       /* ; */
			shift(14), /* nt */
			nil,       /* | */
			shift(17), /* emptyAlt */
			shift(19), /* any */
			shift(20), /* anyof */
			shift(21), /* letter */
			shift(22), /* number */
			shift(23), /* upcase */
			shift(24), /* lowcase */
			shift(25), /* not */
			shift(26), /* space */
			shift(27), /* charLiteral */
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(15), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(15), /* ;, reduce: Symbol */
			reduce(15), /* nt, reduce: Symbol */
			reduce(15), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(15), /* any, reduce: Symbol */
			reduce(15), /* anyof, reduce: Symbol */
			reduce(15), /* letter, reduce: Symbol */
			reduce(15), /* number, reduce: Symbol */
			reduce(15), /* upcase, reduce: Symbol */
			reduce(15), /* lowcase, reduce: Symbol */
			reduce(15), /* not, reduce: Symbol */
			reduce(15), /* space, reduce: Symbol */
			reduce(15), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			shift(28), /* ; */
			nil,       /* nt */
			shift(29), /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(14), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(14), /* ;, reduce: Symbol */
			reduce(14), /* nt, reduce: Symbol */
			reduce(14), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(14), /* any, reduce: Symbol */
			reduce(14), /* anyof, reduce: Symbol */
			reduce(14), /* letter, reduce: Symbol */
			reduce(14), /* number, reduce: Symbol */
			reduce(14), /* upcase, reduce: Symbol */
			reduce(14), /* lowcase, reduce: Symbol */
			reduce(14), /* not, reduce: Symbol */
			reduce(14), /* space, reduce: Symbol */
			reduce(14), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			reduce(9), /* ;, reduce: Alternates */
			nil,       /* nt */
			reduce(9), /* |, reduce: Alternates */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			shift(12),  /* string */
			nil,        /* : */
			reduce(10), /* ;, reduce: Alternate */
			shift(14),  /* nt */
			reduce(10), /* |, reduce: Alternate */
			nil,        /* emptyAlt */
			shift(19),  /* any */
			shift(20),  /* anyof */
			shift(21),  /* letter */
			shift(22),  /* number */
			shift(23),  /* upcase */
			shift(24),  /* lowcase */
			shift(25),  /* not */
			shift(26),  /* space */
			shift(27),  /* charLiteral */
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			nil,        /* string */
			nil,        /* : */
			reduce(11), /* ;, reduce: Alternate */
			nil,        /* nt */
			reduce(11), /* |, reduce: Alternate */
			nil,        /* emptyAlt */
			nil,        /* any */
			nil,        /* anyof */
			nil,        /* letter */
			nil,        /* number */
			nil,        /* upcase */
			nil,        /* lowcase */
			nil,        /* not */
			nil,        /* space */
			nil,        /* charLiteral */
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(12), /* string, reduce: Body */
			nil,        /* : */
			reduce(12), /* ;, reduce: Body */
			reduce(12), /* nt, reduce: Body */
			reduce(12), /* |, reduce: Body */
			nil,        /* emptyAlt */
			reduce(12), /* any, reduce: Body */
			reduce(12), /* anyof, reduce: Body */
			reduce(12), /* letter, reduce: Body */
			reduce(12), /* number, reduce: Body */
			reduce(12), /* upcase, reduce: Body */
			reduce(12), /* lowcase, reduce: Body */
			reduce(12), /* not, reduce: Body */
			reduce(12), /* space, reduce: Body */
			reduce(12), /* charLiteral, reduce: Body */
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(16), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(16), /* ;, reduce: Symbol */
			reduce(16), /* nt, reduce: Symbol */
			reduce(16), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(16), /* any, reduce: Symbol */
			reduce(16), /* anyof, reduce: Symbol */
			reduce(16), /* letter, reduce: Symbol */
			reduce(16), /* number, reduce: Symbol */
			reduce(16), /* upcase, reduce: Symbol */
			reduce(16), /* lowcase, reduce: Symbol */
			reduce(16), /* not, reduce: Symbol */
			reduce(16), /* space, reduce: Symbol */
			reduce(16), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			shift(31), /* string */
			nil,       /* : */
			nil,       /* ; */
			nil,       /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(18), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(18), /* ;, reduce: Symbol */
			reduce(18), /* nt, reduce: Symbol */
			reduce(18), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(18), /* any, reduce: Symbol */
			reduce(18), /* anyof, reduce: Symbol */
			reduce(18), /* letter, reduce: Symbol */
			reduce(18), /* number, reduce: Symbol */
			reduce(18), /* upcase, reduce: Symbol */
			reduce(18), /* lowcase, reduce: Symbol */
			reduce(18), /* not, reduce: Symbol */
			reduce(18), /* space, reduce: Symbol */
			reduce(18), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(19), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(19), /* ;, reduce: Symbol */
			reduce(19), /* nt, reduce: Symbol */
			reduce(19), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(19), /* any, reduce: Symbol */
			reduce(19), /* anyof, reduce: Symbol */
			reduce(19), /* letter, reduce: Symbol */
			reduce(19), /* number, reduce: Symbol */
			reduce(19), /* upcase, reduce: Symbol */
			reduce(19), /* lowcase, reduce: Symbol */
			reduce(19), /* not, reduce: Symbol */
			reduce(19), /* space, reduce: Symbol */
			reduce(19), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(20), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(20), /* ;, reduce: Symbol */
			reduce(20), /* nt, reduce: Symbol */
			reduce(20), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(20), /* any, reduce: Symbol */
			reduce(20), /* anyof, reduce: Symbol */
			reduce(20), /* letter, reduce: Symbol */
			reduce(20), /* number, reduce: Symbol */
			reduce(20), /* upcase, reduce: Symbol */
			reduce(20), /* lowcase, reduce: Symbol */
			reduce(20), /* not, reduce: Symbol */
			reduce(20), /* space, reduce: Symbol */
			reduce(20), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(21), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(21), /* ;, reduce: Symbol */
			reduce(21), /* nt, reduce: Symbol */
			reduce(21), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(21), /* any, reduce: Symbol */
			reduce(21), /* anyof, reduce: Symbol */
			reduce(21), /* letter, reduce: Symbol */
			reduce(21), /* number, reduce: Symbol */
			reduce(21), /* upcase, reduce: Symbol */
			reduce(21), /* lowcase, reduce: Symbol */
			reduce(21), /* not, reduce: Symbol */
			reduce(21), /* space, reduce: Symbol */
			reduce(21), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			shift(32), /* string */
			nil,       /* : */
			nil,       /* ; */
			nil,       /* nt */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(23), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(23), /* ;, reduce: Symbol */
			reduce(23), /* nt, reduce: Symbol */
			reduce(23), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(23), /* any, reduce: Symbol */
			reduce(23), /* anyof, reduce: Symbol */
			reduce(23), /* letter, reduce: Symbol */
			reduce(23), /* number, reduce: Symbol */
			reduce(23), /* upcase, reduce: Symbol */
			reduce(23), /* lowcase, reduce: Symbol */
			reduce(23), /* not, reduce: Symbol */
			reduce(23), /* space, reduce: Symbol */
			reduce(23), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(24), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(24), /* ;, reduce: Symbol */
			reduce(24), /* nt, reduce: Symbol */
			reduce(24), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(24), /* any, reduce: Symbol */
			reduce(24), /* anyof, reduce: Symbol */
			reduce(24), /* letter, reduce: Symbol */
			reduce(24), /* number, reduce: Symbol */
			reduce(24), /* upcase, reduce: Symbol */
			reduce(24), /* lowcase, reduce: Symbol */
			reduce(24), /* not, reduce: Symbol */
			reduce(24), /* space, reduce: Symbol */
			reduce(24), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			reduce(6), /* $, reduce: Rule */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			nil,       /* ; */
			reduce(6), /* nt, reduce: Rule */
			nil,       /* | */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			shift(12), /* string */
			nil,       /* : */
			nil,       /* ; */
			shift(14), /* nt */
			nil,       /* | */
			shift(17), /* emptyAlt */
			shift(19), /* any */
			shift(20), /* anyof */
			shift(21), /* letter */
			shift(22), /* number */
			shift(23), /* upcase */
			shift(24), /* lowcase */
			shift(25), /* not */
			shift(26), /* space */
			shift(27), /* charLiteral */
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(13), /* string, reduce: Body */
			nil,        /* : */
			reduce(13), /* ;, reduce: Body */
			reduce(13), /* nt, reduce: Body */
			reduce(13), /* |, reduce: Body */
			nil,        /* emptyAlt */
			reduce(13), /* any, reduce: Body */
			reduce(13), /* anyof, reduce: Body */
			reduce(13), /* letter, reduce: Body */
			reduce(13), /* number, reduce: Body */
			reduce(13), /* upcase, reduce: Body */
			reduce(13), /* lowcase, reduce: Body */
			reduce(13), /* not, reduce: Body */
			reduce(13), /* space, reduce: Body */
			reduce(13), /* charLiteral, reduce: Body */
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(17), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(17), /* ;, reduce: Symbol */
			reduce(17), /* nt, reduce: Symbol */
			reduce(17), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(17), /* any, reduce: Symbol */
			reduce(17), /* anyof, reduce: Symbol */
			reduce(17), /* letter, reduce: Symbol */
			reduce(17), /* number, reduce: Symbol */
			reduce(17), /* upcase, reduce: Symbol */
			reduce(17), /* lowcase, reduce: Symbol */
			reduce(17), /* not, reduce: Symbol */
			reduce(17), /* space, reduce: Symbol */
			reduce(17), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,        /* INVALID */
			nil,        /* $ */
			nil,        /* package */
			reduce(22), /* string, reduce: Symbol */
			nil,        /* : */
			reduce(22), /* ;, reduce: Symbol */
			reduce(22), /* nt, reduce: Symbol */
			reduce(22), /* |, reduce: Symbol */
			nil,        /* emptyAlt */
			reduce(22), /* any, reduce: Symbol */
			reduce(22), /* anyof, reduce: Symbol */
			reduce(22), /* letter, reduce: Symbol */
			reduce(22), /* number, reduce: Symbol */
			reduce(22), /* upcase, reduce: Symbol */
			reduce(22), /* lowcase, reduce: Symbol */
			reduce(22), /* not, reduce: Symbol */
			reduce(22), /* space, reduce: Symbol */
			reduce(22), /* charLiteral, reduce: Symbol */
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       /* INVALID */
			nil,       /* $ */
			nil,       /* package */
			nil,       /* string */
			nil,       /* : */
			reduce(8), /* ;, reduce: Alternates */
			nil,       /* nt */
			reduce(8), /* |, reduce: Alternates */
			nil,       /* emptyAlt */
			nil,       /* any */
			nil,       /* anyof */
			nil,       /* letter */
			nil,       /* number */
			nil,       /* upcase */
			nil,       /* lowcase */
			nil,       /* not */
			nil,       /* space */
			nil,       /* charLiteral */
		},
	},
}
