// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			shift(3), // package
			nil,      // string_lit
			nil,      // :
			nil,      // ;
			nil,      // nt
			nil,      // |
			nil,      // empty
			nil,      // tokid
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // $
			nil,          // package
			nil,          // string_lit
			nil,          // :
			nil,          // ;
			nil,          // nt
			nil,          // |
			nil,          // empty
			nil,          // tokid
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // package
			nil,      // string_lit
			nil,      // :
			nil,      // ;
			shift(7), // nt
			nil,      // |
			nil,      // empty
			nil,      // tokid
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // $
			nil,      // package
			shift(8), // string_lit
			nil,      // :
			nil,      // ;
			nil,      // nt
			nil,      // |
			nil,      // empty
			nil,      // tokid
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // $, reduce: GoGLL
			nil,       // package
			nil,       // string_lit
			nil,       // :
			nil,       // ;
			shift(7),  // nt
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(3), // $, reduce: Rules
			nil,       // package
			nil,       // string_lit
			nil,       // :
			nil,       // ;
			reduce(3), // nt, reduce: Rules
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			shift(10), // :
			nil,       // ;
			nil,       // nt
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			reduce(6), // :, reduce: NT
			nil,       // ;
			nil,       // nt
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			nil,       // :
			nil,       // ;
			reduce(2), // nt, reduce: Package
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(4), // $, reduce: Rules
			nil,       // package
			nil,       // string_lit
			nil,       // :
			nil,       // ;
			reduce(4), // nt, reduce: Rules
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			shift(11),  // string_lit
			nil,        // :
			reduce(10), // ;, reduce: Alternate
			shift(14),  // nt
			reduce(10), // |, reduce: Alternate
			nil,        // empty
			shift(19),  // tokid
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(16), // string_lit, reduce: Terminal
			nil,        // :
			reduce(16), // ;, reduce: Terminal
			reduce(16), // nt, reduce: Terminal
			reduce(16), // |, reduce: Terminal
			nil,        // empty
			reduce(16), // tokid, reduce: Terminal
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(13), // string_lit, reduce: Symbol
			nil,        // :
			reduce(13), // ;, reduce: Symbol
			reduce(13), // nt, reduce: Symbol
			reduce(13), // |, reduce: Symbol
			nil,        // empty
			reduce(13), // tokid, reduce: Symbol
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			nil,       // :
			shift(20), // ;
			nil,       // nt
			shift(21), // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			reduce(6), // string_lit, reduce: NT
			nil,       // :
			reduce(6), // ;, reduce: NT
			reduce(6), // nt, reduce: NT
			reduce(6), // |, reduce: NT
			nil,       // empty
			reduce(6), // tokid, reduce: NT
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			nil,       // :
			reduce(7), // ;, reduce: Alternates
			nil,       // nt
			reduce(7), // |, reduce: Alternates
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			shift(11), // string_lit
			nil,       // :
			reduce(9), // ;, reduce: Alternate
			shift(14), // nt
			reduce(9), // |, reduce: Alternate
			nil,       // empty
			shift(19), // tokid
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(11), // string_lit, reduce: Symbols
			nil,        // :
			reduce(11), // ;, reduce: Symbols
			reduce(11), // nt, reduce: Symbols
			reduce(11), // |, reduce: Symbols
			nil,        // empty
			reduce(11), // tokid, reduce: Symbols
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(14), // string_lit, reduce: Symbol
			nil,        // :
			reduce(14), // ;, reduce: Symbol
			reduce(14), // nt, reduce: Symbol
			reduce(14), // |, reduce: Symbol
			nil,        // empty
			reduce(14), // tokid, reduce: Symbol
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(15), // string_lit, reduce: Terminal
			nil,        // :
			reduce(15), // ;, reduce: Terminal
			reduce(15), // nt, reduce: Terminal
			reduce(15), // |, reduce: Terminal
			nil,        // empty
			reduce(15), // tokid, reduce: Terminal
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(5), // $, reduce: Rule
			nil,       // package
			nil,       // string_lit
			nil,       // :
			nil,       // ;
			reduce(5), // nt, reduce: Rule
			nil,       // |
			nil,       // empty
			nil,       // tokid
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			shift(11),  // string_lit
			nil,        // :
			reduce(10), // ;, reduce: Alternate
			shift(14),  // nt
			reduce(10), // |, reduce: Alternate
			nil,        // empty
			shift(19),  // tokid
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // $
			nil,        // package
			reduce(12), // string_lit, reduce: Symbols
			nil,        // :
			reduce(12), // ;, reduce: Symbols
			reduce(12), // nt, reduce: Symbols
			reduce(12), // |, reduce: Symbols
			nil,        // empty
			reduce(12), // tokid, reduce: Symbols
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // $
			nil,       // package
			nil,       // string_lit
			nil,       // :
			reduce(8), // ;, reduce: Alternates
			nil,       // nt
			reduce(8), // |, reduce: Alternates
			nil,       // empty
			nil,       // tokid
		},
	},
}
